#include "Client.h"
#include "Rate.h"
#include <chrono>
#include <iostream>
int main(int argc, char* argv[])
{
    FLAGS_log_dir = "../log/";
    google::InitGoogleLogging(argv[0]);
    int ret = 0;
    core_tcp::Client_Club clt;
    int fd;
    float freq = 1000.0;
    clt.add_client("127.0.0.1", 1234, fd, freq);
    std::string s = "123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n";
    core_timer::Rate rate(freq);
    while (1) {
        // auto start = std::chrono::high_resolution_clock::now();
        int siz = clt.push_buffer(s.c_str(), 901, fd);
        clt.write_to_socket(0);
        rate.sleep();
        // auto end = std::chrono::high_resolution_clock::now();
        // auto duration = std::chrono::duration_cast<std::chrono::microseconds>(end - start);
        // std::cout << "程序执行时间: " << duration.count() << " 微秒" << std::endl;
    }
out:
    return ret;
}